Prerequisites
=============

  - libodb           http://www.codesynthesis.com/products/odb/


Building on UNIX
================

The following build instructions are for the Linux/UNIX/Mac OS X
operating systems as well as for Cygwin and MinGW on Windows.

The standard autotools-based build system is used on these platforms. 
After unpacking the source code archive, change to the libodb-tracer
package directory (referred to as libodb-tracer/ from now on) and run
the configure script:

./configure

To see the available configuration options run configure with --help:

./configure --help

The configure script expects the libodb headers and libraries to
be installed in a directory where the C++ compiler and linker will
search for them by default (normally /usr and /usr/local). If libodb
is installed in another directory, you can use the CPPFLAGS and 
LDFLAGS configure variables to specify its location, for example:

./configure CPPFLAGS=-I/opt/libodb/include LDFLAGS=-L/opt/libodb/lib

If libodb is not installed and you would like to use its build
directory instead, you can use the --with-libodb configure option
to specify its location, for example:

./configure --with-libodb=/tmp/libodb

As another example, the following configure command only builds shared
libraries, uses the specified C++ compiler, and compiles with optimization
and without the debug information:

./configure --disable-static CXX=g++-4.5 CXXFLAGS=-O3

Once configuration is complete, run make to build libodb-tracer:

make

Once the build completes successfully, you can install the libodb-tracer
headers and libraries using the install target (you may need to do this
step as root depending on the installation directory):

make install


Building on Windows
===================

The following build instructions are for Windows using Microsoft Visual
Studio. If you would like to build libodb-tracer with GCC either using
Cygwin or MinGW, refer to the "Building on UNIX" section above.

The standard Visual Studio project and solution files are used on this
platform. The provided project files expect the libodb header and import
library directories to be in the VC++ Directories Include and Library
search lists. See the INSTALL file in the libodb package for more
information on how to setup the VC++ Directories.

To build libodb-tracer, unpack the source code archive and open the
libodb-tracer-vc<N>.sln file located in the libodb-tracer package
directory (referred to as libodb-tracer\ from now on). Here <N> is the
version of Visual Studio that you are using. Once the solution is open,
select the desired build configuration (Debug or Release) and platform
(Win32 or x64) and build the solution.

The resulting 32-bit DLLs and import libraries are placed into the 
libodb-tracer\bin\ and libodb-tracer\lib\ directories, respectively.
Similarly, the 64-bit DLLs and import libraries are placed into
libodb-tracer\bin64\ and libodb-tracer\lib64\. The Release versions of
import libraries are named odb-tracer.lib and the Debug versions are
named odb-tracer-d.lib.

To configure Visual Studio to automatically locate the libodb-tracer
headers, DLLs, and import libraries, add the following paths to your
VC++ Directories:

Win32:

  Include:    ...\libodb-tracer
  Library:    ...\libodb-tracer\lib
  Executable: ...\libodb-tracer\bin    

x64:

  Include:    ...\libodb-tracer
  Library:    ...\libodb-tracer\lib64
  Executable: ...\libodb-tracer\bin64    
